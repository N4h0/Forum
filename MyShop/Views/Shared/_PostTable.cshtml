@model IEnumerable<Post>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<div class="container">
    <table class='table table-striped'>
        <tr>
            <th class="bg-dark text-light">User</th>
            <th class="bg-dark text-light">Name</th>
            <th class="bg-dark text-light">Date posted</th>
            @if (User.IsInRole("SuperAdmin"))
            {
                <th class="bg-dark text-light"> </th>
                <th class="bg-dark text-light"> </th>
            }
        </tr>
        <!--Quick sorting method found here: https://stackoverflow.com/questions/24505301/how-to-sort-table-in-asp-net-razor
        -->
        @{ 
                    var postOrdered = Model.OrderByDescending(m => m.PostTime);
        }
        @foreach (var post in postOrdered)
        {
            <tr>
                <td>@post.UserName</td>
                <td>
                    <a asp-controller="Post"
                       asp-action="PostDetails"
                       asp-route-id="@post.PostId">@post.PostTitle</a>
                </td>
                <td>@post.PostTime</td>
                @if (User.IsInRole("SuperAdmin"))
                {
                    <td>
                        <a asp-action="UpdatePost" asp-controller="Post" asp-route-id="@post.PostId" class="btn btn-success">Update</a>
                        <a asp-action="DeletePost" asp-controller="Post" asp-route-id="@post.PostId" class="btn btn-danger">Delete</a>
                    </td>
                }
            </tr>
               }
        </table>
    </div>