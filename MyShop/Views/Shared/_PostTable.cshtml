@model IEnumerable<Post>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<div class="container">
    <table class='table table-striped'>
        <tr>
            <th class="bg-dark text-light">Posts</th>
            <th class="bg-dark text-light">Last comment</th>
            <!-- Check if the user has SuperAdmin role -->
            @if (User.IsInRole("SuperAdmin"))
            {
                <th class="bg-dark text-light"> </th>
            }
        </tr>
        <!--Quick sorting method found here: https://stackoverflow.com/questions/24505301/how-to-sort-table-in-asp-net-razor
        -->
        <!-- Sorting posts by the latest comment -->
        @{ 
                    var postOrdered = Model.OrderByDescending(m => m.LatestComment.CommentTime);
        }
        @foreach (var post in postOrdered)
        {
            <tr>
                <td> <!-- Link to view post details -->

                    <a asp-controller="Post"
                       asp-action="PostDetails"
                       asp-route-id="@post.PostId">@post.PostTitle
                       </a>
                    <small class="text-muted"><BR>Posted @post.PostTime by @post.UserName.</small>
                </td>
                @if (@post.LatestComment == null)
                {
                    <td>
                        <small class="text-muted">No comments.</small>
                    </td>
                } else {
                <td>
                        <small class="text-muted">@post.LatestComment.UserName<BR>@FormatTime(@post.LatestComment.CommentTime).</small>

                </td>
                }



                @if (User.IsInRole("SuperAdmin"))
                {
                    <td>
                        <a asp-action="UpdatePost" asp-controller="Post" asp-route-id="@post.PostId" class="btn btn-success">Update</a>
                        <a asp-action="DeletePost" asp-controller="Post" asp-route-id="@post.PostId" class="btn btn-danger">Delete</a>
                    </td>
                }
                
            </tr>
            
               }
        </table>
    </div>

@functions {
    string FormatTime(DateTime postTime)
    {
        var timeDifference = DateTime.Now - postTime;

        if (timeDifference.Days >= 1)
        {
            if ((int)timeDifference.Days == 1)
            {
                return $"{(int)timeDifference.Days} day ago";
            }
            else
            {
                return $"{(int)timeDifference.Days} days ago";
            }
        }
        else if (timeDifference.Hours >= 1)
        {
            if ((int)timeDifference.Hours == 1)
            {
                return $"{(int)timeDifference.Hours} hour ago";
            }
            else
            {
                return $"{(int)timeDifference.Hours} hours ago";
            }
        }
        else if (timeDifference.Minutes >= 1)
        {
            if ((int)timeDifference.Minutes == 1)
            {
                return $"{(int)timeDifference.Minutes} minute ago";
            }
            else
            {
                return $"{(int)timeDifference.Minutes} minutes ago";
            }
        }
        else
        {
            if ((int)timeDifference.TotalSeconds == 1)
            {
                return $"{(int)timeDifference.Seconds} second ago";
            }
            else
            {
                return $"{(int)timeDifference.Seconds} seconds ago";
            }
        }
    }
}