@model SearchResultViewModel

<style>
    .result-post {
        border: 1px solid #fff;
        border-radius: 10px;
        margin: 10px 0;
        padding: 10px;
        background-color: #f9f9f9;
        color: #333;
    }

    .result-count {
        padding: 0.4rem 1rem;
        border-radius: 3px;
        color: #fff;
        background-color: #7393B3;
        margin-top:20px;
    }
</style>
<h1>Search Results</h1>

@{
    int totalResults = (Model.Categories?.Count ?? 0) + (Model.Posts?.Count ?? 0) + (Model.Topics?.Count ?? 0) + (Model.Rooms?.Count ?? 0) + (Model.Comments?.Count ?? 0);
}

<div class="result-container">
    <div class="search-results">
        @if (totalResults == 0)
        {

            <form class="d-flex" method="get" action="/Search/Search">
                <input class="form-control me-2" placeholder="Search" aria-label="Search" name="search" />
                <button class="btn btn-white border" type="submit"><i class="fas fa-search"></i></button>
            </form>
            <div class="no-results">
                <div class="result-count">
                    <p>Found @totalResults results</p>
                </div>
                <p>We couldn't find any matches for your search. You can try a more general search or modify some of the criteria.</p>
            </div>
        }
        else
        {

            <form class="d-flex" method="get" action="/Search/Search">
                <input class="form-control me-2" placeholder="Search" aria-label="Search" name="search" />
                <button class="btn btn-white border" type="submit"><i class="fas fa-search"></i></button>
            </form>
            <div class="result-count">

                <p>Found @totalResults results</p>
            </div>

            <!-- Here you display each result in separate posts -->
            @if (Model.Categories != null && Model.Categories.Count > 0)
            {
                @foreach (var category in Model.Categories)
                {
                    <div class="result-post">
                        <a href="@Url.Action("CategoryDetails", "Category", new { id = category.CategoryId })">@category.Name</a>
                        <!-- Add other category information here -->
                    </div>
                }
            }

            @if (Model.Posts != null && Model.Posts.Count > 0)
            {
                @foreach (var post in Model.Posts)
                {
                    <div class="result-post">
                        <a href="@Url.Action("PostDetails", "Post", new { id = post.PostId })">@post.PostTitle</a>

                        @{
                            // Get the post creation time from the model
                            var postCreationTime = post.PostTime;

                            // Calculate the time difference from now to the creation time
                            var timeDifference = DateTime.Now - postCreationTime;

                            var timeAgo = string.Empty;

                            if (timeDifference.TotalDays >= 1)
                            {
                                timeAgo = $"{(int)timeDifference.TotalDays} days ago";
                            }
                            else if (timeDifference.TotalHours >= 1)
                            {
                                timeAgo = $"{(int)timeDifference.TotalHours} hours ago";
                            }
                            else if (timeDifference.TotalMinutes >= 1)
                            {
                                timeAgo = $"{(int)timeDifference.TotalMinutes} minutes ago";
                            }
                            else
                            {
                                timeAgo = $"{(int)timeDifference.TotalSeconds} seconds ago";
                            }
                        }

                        <p>@timeAgo</p>

                        <!-- Add other post information here -->
                    </div>
                }
            }

            <!-- Repeat this pattern for Topics, Rooms, and Comments -->
        }
    </div>
</div>
